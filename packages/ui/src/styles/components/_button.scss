@mixin button-hover {
  &:not([disabled]):not(.is-loading):hover,
  &:not([disabled]):not(.is-loading):focus {
    z-index: var(--#{$variable-prefix}zindex-hover);
    @content;
  }
}

@mixin button-active {
  &:not([disabled]):not(.is-loading):active {
    z-index: var(--#{$variable-prefix}zindex-active);
    @content;
  }
}

@include b(button) {
  $selector: &;

  position: relative;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: var(--#{$variable-prefix}size);
  height: var(--#{$variable-prefix}size);
  margin: 0;
  border-radius: var(--#{$variable-prefix}border-radius);

  font-size: var(--#{$variable-prefix}font);
  font-family: inherit;
  white-space: nowrap;
  text-align: unset;
  text-transform: none;
  vertical-align: top;

  outline: none;
  cursor: pointer;

  transition: border-color 0.2s linear, color 0.2s linear, background-color 0.2s linear;

  appearance: none;

  &:disabled:not(.is-loading) {
    cursor: not-allowed;
  }

  @include when(loading) {
    cursor: wait;
  }

  @include m(primary) {
    padding: 0 calc(var(--#{$variable-prefix}padding-size) - 1px);
    border: 1px solid var(--#{$variable-prefix}button-color);

    /* stylelint-disable-next-line declaration-property-value-allowed-list */
    color: #fff;

    background-color: var(--#{$variable-prefix}button-color);

    &:disabled:not(.is-loading) {
      filter: saturate(50%) grayscale(50%);
    }

    @include when(loading) {
      @include utils-loading('1px');
    }

    @include button-hover {
      border-color: var(--#{$variable-prefix}button-color-lighter);

      background-color: var(--#{$variable-prefix}button-color-lighter);
    }

    @include button-active {
      border-color: var(--#{$variable-prefix}button-color-darker);

      background-color: var(--#{$variable-prefix}button-color-darker);
    }
  }

  @include m(secondary) {
    padding: 0 calc(var(--#{$variable-prefix}padding-size) - 1px);
    border: 1px solid var(--#{$variable-prefix}color-border);

    color: var(--#{$variable-prefix}text-color);

    background-color: transparent;

    @include utils-disabled(true, ':disabled:not(.is-loading)');

    @include button-hover {
      border-color: var(--#{$variable-prefix}button-color-lighter);

      color: var(--#{$variable-prefix}button-color-lighter);
    }

    @include button-active {
      border-color: var(--#{$variable-prefix}button-color-darker);

      color: var(--#{$variable-prefix}button-color-darker);
    }
  }

  @include m(outline) {
    padding: 0 calc(var(--#{$variable-prefix}padding-size) - 1px);
    border: 1px solid var(--#{$variable-prefix}button-color);

    color: var(--#{$variable-prefix}button-color);

    background-color: transparent;

    &:disabled:not(.is-loading) {
      border-color: var(--#{$variable-prefix}color-border);

      color: var(--#{$variable-prefix}color-disabled);
    }

    @include button-hover {
      border-color: var(--#{$variable-prefix}button-color-lighter);

      color: var(--#{$variable-prefix}button-color-lighter);
    }

    @include button-active {
      border-color: var(--#{$variable-prefix}button-color-darker);

      color: var(--#{$variable-prefix}button-color-darker);
    }
  }

  @include m(dashed) {
    padding: 0 calc(var(--#{$variable-prefix}padding-size) - 1px);
    border: 1px dashed var(--#{$variable-prefix}button-color);

    color: var(--#{$variable-prefix}button-color);

    background-color: transparent;

    &:disabled:not(.is-loading) {
      border-color: var(--#{$variable-prefix}color-border);

      color: var(--#{$variable-prefix}color-disabled);
    }

    @include button-hover {
      border-color: var(--#{$variable-prefix}button-color-lighter);

      color: var(--#{$variable-prefix}button-color-lighter);
    }

    @include button-active {
      border-color: var(--#{$variable-prefix}button-color-darker);

      color: var(--#{$variable-prefix}button-color-darker);
    }
  }

  @include m(text) {
    padding: 0 var(--#{$variable-prefix}padding-size);
    border: none;

    color: var(--#{$variable-prefix}text-color);

    background-color: transparent;

    @include utils-disabled(true, ':disabled:not(.is-loading)');

    @include button-hover {
      color: var(--#{$variable-prefix}button-color-lighter);

      background-color: var(--#{$variable-prefix}button-text-hover-background);
    }

    @include button-active {
      color: var(--#{$variable-prefix}button-color-darker);

      background-color: var(--#{$variable-prefix}button-text-active-background);
    }
  }

  @include m(link) {
    padding: 0 var(--#{$variable-prefix}padding-size);
    border: none;

    color: var(--#{$variable-prefix}button-color);

    background-color: transparent;

    &:disabled:not(.is-loading) {
      color: var(--#{$variable-prefix}color-disabled);
    }

    @include button-hover {
      color: var(--#{$variable-prefix}button-color-lighter);
    }

    @include button-active {
      color: var(--#{$variable-prefix}button-color-darker);
    }
  }

  @include m(circle) {
    border-radius: 50%;
  }

  @include m(round) {
    border-radius: var(--#{$variable-prefix}size);
  }

  @include m(smaller) {
    --#{$variable-prefix}size: var(--#{$variable-prefix}size-smaller);
    --#{$variable-prefix}font: var(--#{$variable-prefix}font-smaller);
    --#{$variable-prefix}padding-size: var(--#{$variable-prefix}padding-size-smaller);
  }

  @include m(larger) {
    --#{$variable-prefix}size: var(--#{$variable-prefix}size-larger);
    --#{$variable-prefix}font: var(--#{$variable-prefix}font-larger);
    --#{$variable-prefix}padding-size: var(--#{$variable-prefix}padding-size-larger);
  }

  @include m(block) {
    width: 100%;
  }

  @include m(icon) {
    &:not(#{$selector}--round) {
      padding: 0;
    }

    @include e(icon) {
      width: auto;

      font-size: 1.2em;
    }
  }

  @each $theme, $rgb in $themes {
    @include theme(#{$theme}) {
      --#{$variable-prefix}button-color: var(--#{$variable-prefix}color-#{$theme});
      --#{$variable-prefix}button-color-lighter: var(--#{$variable-prefix}color-#{$theme}-lighter);
      --#{$variable-prefix}button-color-darker: var(--#{$variable-prefix}color-#{$theme}-darker);
      --#{$variable-prefix}button-text-hover-background: var(--#{$variable-prefix}background-color-hover-#{$theme});
      --#{$variable-prefix}button-text-active-background: var(--#{$variable-prefix}background-color-#{$theme});
    }
  }

  @include e(icon) {
    display: inline-flex;
    width: calc(1em + 8px);

    @include m(right) {
      justify-content: flex-end;
    }
  }
}

@include b(button-group) {
  display: inline-flex;
  align-items: center;

  vertical-align: top;

  $button-selector: '.#{$variable-prefix}button';
  #{$button-selector} {
    flex-shrink: 0;

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    &:first-child:not(:only-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child:not(:only-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
  #{$button-selector} + #{$button-selector} {
    margin-left: -1px;
  }
}
